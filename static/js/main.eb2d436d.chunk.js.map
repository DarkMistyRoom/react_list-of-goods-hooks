{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isStarted","setIsStarted","isReversed","setIsReversed","NONE","sortType","setSortType","minLength","setMinLength","visibleGoods","goods","filter","good","length","sort","g1","g2","ALPABET","localeCompare","LENGTH","reverse","getReorderedGoods","className","type","onClick","name","id","value","onChange","e","currentTarget","map","ReactDOM","render","document","getElementById"],"mappings":"wJAiBKA,E,4CAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAmCE,IAAME,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAASH,EAASQ,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCP,mBAAS,GAA3C,mBAAOQ,EAAP,KAAkBC,EAAlB,KAQMC,EAzCR,SACEC,EACAL,EACAH,EACAK,GAGA,IAAME,EAAeC,EAAMC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUN,KAmBzD,OAjBAE,EAAaK,MAAK,SAACC,EAAIC,GACrB,OAAQX,GACN,KAAKT,EAASqB,QACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKpB,EAASuB,OACZ,OAAOJ,EAAGF,OAASG,EAAGH,OAExB,QACE,OAAO,MAITX,GACFO,EAAaW,UAGRX,EAgBHY,CAAkBxB,EAAiBQ,EAAUH,EAAYK,GAE7D,OACE,qBAAKe,UAAU,uBAAf,SACItB,EASA,qCACE,sBAAKsB,UAAU,gBAAf,UACE,wBACEA,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAMlB,EAAYV,EAASqB,UAHtC,iCAQA,wBACEK,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAMlB,EAAYV,EAASuB,SAHtC,4BAQA,wBACEG,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAMrB,GAAeD,IAHhC,qBAQA,wBAAQoB,UAAU,SAASC,KAAK,SAASC,QA9CrC,WACZrB,GAAc,GACdG,EAAYV,EAASQ,MACrBI,EAAa,IA2CL,sBAKF,wBAAOc,UAAU,yBAAjB,wBAEE,yBACEA,UAAU,qBACVG,KAAK,YACLC,GAAG,YACHC,MAAOpB,EACPqB,SAAU,SAAAC,GAAC,OAAIrB,GAAcqB,EAAEC,cAAcH,QAL/C,UAOE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,sBAIJ,oBAAIL,UAAU,QAAd,SACGb,EAAasB,KAAI,SAAAnB,GAAI,OACpB,oBAAeU,UAAU,0BAAzB,SAAoDV,GAA3CA,WA/Df,wBACEU,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAMvB,GAAa,IAH9B,sBCnER+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.eb2d436d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.scss';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n  minLength: number,\n) {\n  // Not to mutate the original array\n  const visibleGoods = goods.filter(good => good.length >= minLength);\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isStarted, setIsStarted] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [minLength, setMinLength] = useState(1);\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n    setMinLength(1);\n  };\n\n  const visibleGoods\n    = getReorderedGoods(goodsFromServer, sortType, isReversed, minLength);\n\n  return (\n    <div className=\"App panel is-success\">\n      {!isStarted ? (\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={() => setIsStarted(true)}\n        >\n          Start\n        </button>\n      ) : (\n        <>\n          <div className=\"panel-heading\">\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setSortType(SortType.ALPABET)}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setSortType(SortType.LENGTH)}\n            >\n              Sort by length\n            </button>\n\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setIsReversed(!isReversed)}\n            >\n              Reverse\n            </button>\n\n            <button className=\"button\" type=\"button\" onClick={reset}>\n              Reset\n            </button>\n          </div>\n\n          <label className=\"App__label panel-block\">\n            Min-length:\n            <select\n              className=\"App__select select\"\n              name=\"minLength\"\n              id=\"minLength\"\n              value={minLength}\n              onChange={e => setMinLength(+e.currentTarget.value)}\n            >\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n              <option value=\"10\">10</option>\n            </select>\n          </label>\n\n          <ul className=\"Goods\">\n            {visibleGoods.map(good => (\n              <li key={good} className=\"Goods__item panel-block\">{good}</li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}